<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="PlanningPoker" default="compile.deps" xmlns:jacoco="antlib:org.jacoco.ant">
	<import file="../build-common.xml" />

	<property name="core-jar-dest" location="${core-lib}/PlanningPoker.jar" />
	<property name="janeway-jar-dest" location="../Janeway/modules/PlanningPoker.jar" />
	<property name="exec-file" location="jacoco.exec" />

	<path id="classpath">
		<pathelement path="../Janeway/build" />
		<pathelement path="../Network/build" />
		<pathelement path="../RequirementManager/build" />
		<pathelement path="../Core/WPISuite-Interfaces/build" />
		<fileset dir="${core-lib}">
			<include name="gson-*.jar" />
			<include name="mail.jar" />
			<include name="plivo-java-3.0.2-jar-with-dependencies.jar" />
		</fileset>
		<fileset dir="${janeway-lib}">
			<include name="jfreechart-1.0.14.jar" />
			<include name="jcommon-1.0.17.jar" />
			<include name="gnujaxp.jar" />
			<include name="iText-2.1.5.jar" />
			<include name="miglayout-4.0-swing.jar" />
			<include name="swingx-all-1.6.4.jar" />
		</fileset>
		<pathelement path="build" />
	</path>

	<path id="test-classpath">
		<path refid="classpath" />
		<pathelement path="build-test" />
		<pathelement path="${junit-jar}" />
	</path>

	<target name="compile-base">
		<mkdir dir="build" />
		<javac srcdir="src" destdir="build" includeJavaRuntime="yes" debug="true" target="${java-version}" debuglevel="lines,vars,source" includeantruntime="false">
			<classpath refid="classpath" />
		</javac>
		<copy todir="build">
			<fileset dir="src" includes="**/*.png" />
		</copy>
	</target>

	<!-- Janeway and the Core need to load jars containing our module -->

	<target name="janeway-jar" depends="compile-base">
		<jar destfile="${janeway-jar-dest}">
			<fileset dir="build" />
			<fileset file="manifest.txt" />
		</jar>
	</target>

	<target name="core-jar" depends="compile-base">
		<jar destfile="${core-jar-dest}">
			<fileset dir="build" />
		</jar>
	</target>

	<target name="compile" depends="janeway-jar, core-jar" />

	<target name="compile-test" depends="compile-base">
		<mkdir dir="build-test" />
		<javac srcdir="test" destdir="build-test" includeJavaRuntime="yes" debug="true" target="${java-version}" debuglevel="lines,vars,source" includeantruntime="false">
			<classpath refid="test-classpath" />
		</javac>
	</target>

	<target name="clean">
		<delete dir="build" />
		<delete dir="build-test" />
		<delete file="${core-jar-dest}" />
		<delete file="${janeway-jar-dest}" />
		<delete file="${exec-file}"/>
	</target>

	<!-- compile dependency is necessary since Core needs jars to run tests... hacky -->
	<target name="test" depends="compile-test, compile">
		<junit printsummary="yes" haltonfailure="no">
			<classpath refid="test-classpath" />
			<formatter type="xml" />
			<batchtest fork="yes" todir="${test-results}">
				<fileset dir="test">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="test-coverage" depends="compile-test, compile">
		<jacoco:coverage destfile="${exec-file}">
			<junit printsummary="yes" haltonfailure="no" fork="true">
				<classpath refid="test-classpath"/>
				<formatter type="xml"/>
				<batchtest fork="yes" todir="${test-results}">
					<fileset dir="test">
						<include name="**/*Test*.java"/>
					</fileset>
				</batchtest>
			</junit>
		</jacoco:coverage>
	</target>

	<target name="report" depends="test-coverage">
		<jacoco:report>
			<executiondata>
				<file file="${exec-file}" />
			</executiondata>

			<structure name="Planning Poker">
				<classfiles>
					<fileset dir="build" />
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="src" />
				</sourcefiles>
			</structure>

			<html destdir="${coverage-results}" />
		</jacoco:report>
	</target>
	
	<target name="dist" depends="compile">
		<copy file="${janeway-jar-dest}" todir="${dist}/janeway/modules" overwrite="true" />
	</target>

	<target name="doc">
		<javadoc sourcepath="src" destdir="${doc-dir}"/>
	</target>
</project>
